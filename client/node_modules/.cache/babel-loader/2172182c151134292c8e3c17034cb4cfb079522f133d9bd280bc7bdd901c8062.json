{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bnaz1\\\\Desktop\\\\devconnect\\\\client\\\\src\\\\components\\\\Notification.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { FaBell, FaTimes, FaCheck } from 'react-icons/fa';\nimport axios from 'axios';\nimport { useAuth } from '../context/AuthContext';\nimport './Notification.css';\n\n// Request notification permission on component mount\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nif ('Notification' in window && Notification.permission === 'default') {\n  Notification.requestPermission();\n}\nconst Notification = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [isOpen, setIsOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const {\n    user,\n    socket\n  } = useAuth();\n  const dropdownRef = useRef(null);\n  useEffect(() => {\n    if (user) {\n      fetchNotifications();\n      fetchUnreadCount();\n    }\n  }, [user]);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  // Listen for real-time notifications\n  useEffect(() => {\n    if (socket) {\n      const handleNewNotification = notification => {\n        setNotifications(prev => [notification, ...prev]);\n        setUnreadCount(prev => prev + 1);\n\n        // Show browser notification if permission granted\n        if ('Notification' in window && Notification.permission === 'granted') {\n          new Notification(notification.title, {\n            body: notification.message,\n            icon: '/favicon.ico'\n          });\n        }\n      };\n      socket.on('notification', handleNewNotification);\n      return () => {\n        socket.off('notification', handleNewNotification);\n      };\n    }\n  }, [socket]);\n  const fetchNotifications = async () => {\n    try {\n      setLoading(true);\n      const res = await axios.get('/api/notifications');\n      setNotifications(res.data.data);\n    } catch (error) {\n      console.error('Error fetching notifications:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchUnreadCount = async () => {\n    try {\n      const res = await axios.get('/api/notifications/unread-count');\n      setUnreadCount(res.data.count);\n    } catch (error) {\n      console.error('Error fetching unread count:', error);\n    }\n  };\n  const markAsRead = async notificationId => {\n    try {\n      await axios.put(`/api/notifications/${notificationId}/read`);\n      setNotifications(notifications.map(notif => notif._id === notificationId ? {\n        ...notif,\n        read: true\n      } : notif));\n      setUnreadCount(prev => Math.max(0, prev - 1));\n    } catch (error) {\n      console.error('Error marking notification as read:', error);\n    }\n  };\n  const markAllAsRead = async () => {\n    try {\n      await axios.put('/api/notifications/mark-all-read');\n      setNotifications(notifications.map(notif => ({\n        ...notif,\n        read: true\n      })));\n      setUnreadCount(0);\n    } catch (error) {\n      console.error('Error marking all notifications as read:', error);\n    }\n  };\n  const deleteNotification = async notificationId => {\n    try {\n      await axios.delete(`/api/notifications/${notificationId}`);\n      setNotifications(notifications.filter(notif => notif._id !== notificationId));\n      // Update unread count if deleted notification was unread\n      const deletedNotif = notifications.find(notif => notif._id === notificationId);\n      if (deletedNotif && !deletedNotif.read) {\n        setUnreadCount(prev => Math.max(0, prev - 1));\n      }\n    } catch (error) {\n      console.error('Error deleting notification:', error);\n    }\n  };\n  const formatTime = date => {\n    const now = new Date();\n    const notificationDate = new Date(date);\n    const diffInHours = Math.floor((now - notificationDate) / (1000 * 60 * 60));\n    if (diffInHours < 1) return 'Just now';\n    if (diffInHours < 24) return `${diffInHours}h ago`;\n    const diffInDays = Math.floor(diffInHours / 24);\n    if (diffInDays < 7) return `${diffInDays}d ago`;\n    return notificationDate.toLocaleDateString();\n  };\n  const getNotificationIcon = type => {\n    switch (type) {\n      case 'message':\n        return '💬';\n      case 'project_update':\n        return '📋';\n      case 'project_join_approved':\n        return '✅';\n      case 'project_join_rejected':\n        return '❌';\n      default:\n        return '🔔';\n    }\n  };\n  if (!user) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification-container\",\n    ref: dropdownRef,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"notification-bell\",\n      onClick: () => setIsOpen(!isOpen),\n      title: \"Notifications\",\n      children: [/*#__PURE__*/_jsxDEV(FaBell, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"notification-badge\",\n        children: unreadCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mark-all-read-btn\",\n          onClick: markAllAsRead,\n          children: \"Mark all read\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-list\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-loading\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }, this) : notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-empty\",\n          children: \"No notifications yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }, this) : notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `notification-item ${!notification.read ? 'unread' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-icon\",\n            children: getNotificationIcon(notification.type)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-title\",\n              children: notification.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-message\",\n              children: notification.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-time\",\n              children: formatTime(notification.createdAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-actions\",\n            children: [!notification.read && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"notification-action-btn\",\n              onClick: () => markAsRead(notification._id),\n              title: \"Mark as read\",\n              children: /*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"notification-action-btn delete\",\n              onClick: () => deleteNotification(notification._id),\n              title: \"Delete\",\n              children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 19\n          }, this)]\n        }, notification._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(Notification, \"0u6qyCPbcSlFIYmn9buY7ogAo8M=\", false, function () {\n  return [useAuth];\n});\n_c = Notification;\nexport default Notification;\nvar _c;\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FaBell","FaTimes","FaCheck","axios","useAuth","jsxDEV","_jsxDEV","window","Notification","permission","requestPermission","_s","notifications","setNotifications","unreadCount","setUnreadCount","isOpen","setIsOpen","loading","setLoading","user","socket","dropdownRef","fetchNotifications","fetchUnreadCount","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleNewNotification","notification","prev","title","body","message","icon","on","off","res","get","data","error","console","count","markAsRead","notificationId","put","map","notif","_id","read","Math","max","markAllAsRead","deleteNotification","delete","filter","deletedNotif","find","formatTime","date","now","Date","notificationDate","diffInHours","floor","diffInDays","toLocaleDateString","getNotificationIcon","type","className","ref","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","createdAt","_c","$RefreshReg$"],"sources":["C:/Users/bnaz1/Desktop/devconnect/client/src/components/Notification.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { FaBell, FaTimes, FaCheck } from 'react-icons/fa';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport './Notification.css';\r\n\r\n// Request notification permission on component mount\r\nif ('Notification' in window && Notification.permission === 'default') {\r\n  Notification.requestPermission();\r\n}\r\n\r\nconst Notification = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const { user, socket } = useAuth();\r\n  const dropdownRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      fetchNotifications();\r\n      fetchUnreadCount();\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => document.removeEventListener('mousedown', handleClickOutside);\r\n  }, []);\r\n\r\n  // Listen for real-time notifications\r\n  useEffect(() => {\r\n    if (socket) {\r\n      const handleNewNotification = (notification) => {\r\n        setNotifications(prev => [notification, ...prev]);\r\n        setUnreadCount(prev => prev + 1);\r\n\r\n        // Show browser notification if permission granted\r\n        if ('Notification' in window && Notification.permission === 'granted') {\r\n          new Notification(notification.title, {\r\n            body: notification.message,\r\n            icon: '/favicon.ico'\r\n          });\r\n        }\r\n      };\r\n\r\n      socket.on('notification', handleNewNotification);\r\n\r\n      return () => {\r\n        socket.off('notification', handleNewNotification);\r\n      };\r\n    }\r\n  }, [socket]);\r\n\r\n  const fetchNotifications = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const res = await axios.get('/api/notifications');\r\n      setNotifications(res.data.data);\r\n    } catch (error) {\r\n      console.error('Error fetching notifications:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchUnreadCount = async () => {\r\n    try {\r\n      const res = await axios.get('/api/notifications/unread-count');\r\n      setUnreadCount(res.data.count);\r\n    } catch (error) {\r\n      console.error('Error fetching unread count:', error);\r\n    }\r\n  };\r\n\r\n  const markAsRead = async (notificationId) => {\r\n    try {\r\n      await axios.put(`/api/notifications/${notificationId}/read`);\r\n      setNotifications(notifications.map(notif =>\r\n        notif._id === notificationId ? { ...notif, read: true } : notif\r\n      ));\r\n      setUnreadCount(prev => Math.max(0, prev - 1));\r\n    } catch (error) {\r\n      console.error('Error marking notification as read:', error);\r\n    }\r\n  };\r\n\r\n  const markAllAsRead = async () => {\r\n    try {\r\n      await axios.put('/api/notifications/mark-all-read');\r\n      setNotifications(notifications.map(notif => ({ ...notif, read: true })));\r\n      setUnreadCount(0);\r\n    } catch (error) {\r\n      console.error('Error marking all notifications as read:', error);\r\n    }\r\n  };\r\n\r\n  const deleteNotification = async (notificationId) => {\r\n    try {\r\n      await axios.delete(`/api/notifications/${notificationId}`);\r\n      setNotifications(notifications.filter(notif => notif._id !== notificationId));\r\n      // Update unread count if deleted notification was unread\r\n      const deletedNotif = notifications.find(notif => notif._id === notificationId);\r\n      if (deletedNotif && !deletedNotif.read) {\r\n        setUnreadCount(prev => Math.max(0, prev - 1));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting notification:', error);\r\n    }\r\n  };\r\n\r\n  const formatTime = (date) => {\r\n    const now = new Date();\r\n    const notificationDate = new Date(date);\r\n    const diffInHours = Math.floor((now - notificationDate) / (1000 * 60 * 60));\r\n\r\n    if (diffInHours < 1) return 'Just now';\r\n    if (diffInHours < 24) return `${diffInHours}h ago`;\r\n    const diffInDays = Math.floor(diffInHours / 24);\r\n    if (diffInDays < 7) return `${diffInDays}d ago`;\r\n    return notificationDate.toLocaleDateString();\r\n  };\r\n\r\n  const getNotificationIcon = (type) => {\r\n    switch (type) {\r\n      case 'message':\r\n        return '💬';\r\n      case 'project_update':\r\n        return '📋';\r\n      case 'project_join_approved':\r\n        return '✅';\r\n      case 'project_join_rejected':\r\n        return '❌';\r\n      default:\r\n        return '🔔';\r\n    }\r\n  };\r\n\r\n  if (!user) return null;\r\n\r\n  return (\r\n    <div className=\"notification-container\" ref={dropdownRef}>\r\n      <button\r\n        className=\"notification-bell\"\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        title=\"Notifications\"\r\n      >\r\n        <FaBell />\r\n        {unreadCount > 0 && (\r\n          <span className=\"notification-badge\">{unreadCount}</span>\r\n        )}\r\n      </button>\r\n\r\n      {isOpen && (\r\n        <div className=\"notification-dropdown\">\r\n          <div className=\"notification-header\">\r\n            <h3>Notifications</h3>\r\n            {unreadCount > 0 && (\r\n              <button\r\n                className=\"mark-all-read-btn\"\r\n                onClick={markAllAsRead}\r\n              >\r\n                Mark all read\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"notification-list\">\r\n            {loading ? (\r\n              <div className=\"notification-loading\">Loading...</div>\r\n            ) : notifications.length === 0 ? (\r\n              <div className=\"notification-empty\">No notifications yet</div>\r\n            ) : (\r\n              notifications.map((notification) => (\r\n                <div\r\n                  key={notification._id}\r\n                  className={`notification-item ${!notification.read ? 'unread' : ''}`}\r\n                >\r\n                  <div className=\"notification-icon\">\r\n                    {getNotificationIcon(notification.type)}\r\n                  </div>\r\n                  <div className=\"notification-content\">\r\n                    <div className=\"notification-title\">{notification.title}</div>\r\n                    <div className=\"notification-message\">{notification.message}</div>\r\n                    <div className=\"notification-time\">\r\n                      {formatTime(notification.createdAt)}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"notification-actions\">\r\n                    {!notification.read && (\r\n                      <button\r\n                        className=\"notification-action-btn\"\r\n                        onClick={() => markAsRead(notification._id)}\r\n                        title=\"Mark as read\"\r\n                      >\r\n                        <FaCheck />\r\n                      </button>\r\n                    )}\r\n                    <button\r\n                      className=\"notification-action-btn delete\"\r\n                      onClick={() => deleteNotification(notification._id)}\r\n                      title=\"Delete\"\r\n                    >\r\n                      <FaTimes />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}